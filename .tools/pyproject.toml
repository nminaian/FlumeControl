# * -------------------------------------------------------------------------------- * #
# * Changes below should persist in significant template updates.

# * -------------------------------------------------------------------------------- * #
# * Changes below may be lost in significant template updates.

[build-system]
requires = ["flit_core >=3.3,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "flumecontrol"
requires-python = ">=3.11"
dependencies = []
readme = "README.md"
dynamic = ["version", "description"]
[[project.authors]]
name = "Nazanin Minaian, Blake Naccarato"
email = "+flumecontrol@gmail.com"

[project.urls]
Home = "https://github.com/blakeNaccarato/flumecontrol"

[tool.ruff]
fix = true
select = ["ALL"]
src = ["src", "tests"]
target-version = "py311"
extend-exclude = ["template", "typings", ".github", ".tools", ".venv"]
ignore = [
    # * ---------------------------------------------------------------------------- * #
    # * Changes below should persist in significant template updates.

    # * ---------------------------------------------------------------------------- * #
    # * Changes below may be lost in significant template updates.

    "ANN",     # Don't require type annotations.
    "ARG005",  # Allow unused lambda argument. For consistency across df pipelines.
    "C408",    # Allow dict calls.
    "COM",     # Allow magic commas and magic missing commas.
    "D10",     # Missing docstrings.
    "D20",     # Don't reformat docstrings in these ways.
    "D213",    # Multi-line docstring summary should start at the second line.
    "DTZ",     # Timezones are important, but only contextually necessary.
    "E501",    # Black enforces this.
    "EM",      # Don't check for exception message issues.
    "ERA",     # False positives. Don't get rid of commented out code.
    "FBT",     # Allow boolean "traps".
    "INP001",  # False positives. Checks for packages missing `__init__.py`.
    "ISC",     # False positives. Implicit string concatenation is fine.
    "PD013",   # Allow `stack` instead of `melt`. They're not a direct swap.
    "PD901",   # Allow `df` variable name. We are all consenting adults here.
    "PGH003",  # Until black stops wrapping special ignores, let's allow bare.
    "PLW2901", # Allow overwriting loop variables. We are all consenting adults here.
    "RET",     # Return checks are flaky, Sourcery does fine analysing these paths.
    "TCH",     # Type checking linter doesn't play nicely with pydantic.
    "TRY003",  # Allow long exception messages.
    # * ---------------------------------------------------------------------------- * #
    # * These Jupyter-specific ignores can't be per-file-ignores
    # * https://nbqa.readthedocs.io/en/latest/known-limitations.html
    "F821", # Allow undefined names, such as `display`
    "S101", # Allow assert
    "T201", # Allow print in notebooks
]
unfixable = [
    # * ---------------------------------------------------------------------------- * #
    # * Changes below should persist in significant template updates.

    # * ---------------------------------------------------------------------------- * #
    # * Changes below may be lost in significant template updates.

    "F601", # Don't fix duplicate mapping keys
]

[tool.ruff.per-file-ignores]
"tests/**" = [
    # * ---------------------------------------------------------------------------- * #
    # * Changes below should persist in significant template updates.

    # * ---------------------------------------------------------------------------- * #
    # * Changes below may be lost in significant template updates.

    "ARG001", # Allow unused arguments in tests
    "S101",   # Allow assert in tests
]

[tool.ruff.flake8-bugbear]
extend-immutable-calls = ["typer.Argument", "typer.Option"]

[tool.ruff.pep8-naming]
classmethod-decorators = ["pydantic.validator"]
